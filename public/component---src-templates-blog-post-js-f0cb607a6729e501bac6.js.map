{"version":3,"sources":["webpack:///./src/styles/dateTime.js","webpack:///./src/styles/category.js","webpack:///./src/components/comment.js","webpack:///./src/templates/blogPost.js"],"names":["DateTime","styled","time","Category","span","src","Comment","repo","useSiteMetadata","siteMetadata","utterances","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","themeMode","current","DARK","document","body","dataset","utterancesEl","querySelector","message","type","contentWindow","postMessage","postThemeMessage","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","createUtterancesEl","ref","displayName","OuterWrapper","div","device","sm","InnerWrapper","CommentWrap","section","PostCategory","Info","Time","Desc","p","Divider","Title","h1","md","query","BlogPost","data","markdownRemark","frontmatter","title","desc","thumbnail","date","category","html","ogImagePath","childImageSharp","fixed","description","image","dateTime","dangerouslySetInnerHTML","__html","rhythm"],"mappings":"6FAAA,IAEMA,EAFN,UAEiBC,EAAOC,KAAV,yEAAGD,CAAH,0GAOCD,O,kCCTf,IAEMG,EAFN,UAEiBF,EAAOG,KAAV,qEAAGH,CAAH,0GAOCE,O,gLCJTE,EAAM,sBAKNC,EAAU,WACd,IACQC,EADKC,cACSC,aAAaC,WAA3BH,KACFI,EAAQC,qBAAWC,KACnBC,EAAeC,iBAAO,MACtBC,EAAsBD,kBAAO,GA6CnC,OA3CAE,qBAAU,WACR,GAAKV,EAAL,CACA,IAAIW,EAAY,KAKTA,EAHFF,EAAoBG,QAGNR,IAAUS,IAhBd,cADC,eAgBZC,SAASC,KAAKC,QAAQZ,QAAUS,IAfrB,cADC,eAmBhB,IAkBMI,EAAeV,EAAaK,QAAQM,cAtCnB,2BAiDvBT,EAAoBG,QATK,WACvB,GAAKK,EAAL,CACA,IAAME,EAAU,CACdC,KAAM,YACNhB,MAAOO,GAETM,EAAaI,cAAcC,YAAYH,EAASrB,IAI9CyB,GA9BuB,WACzB,IAAMC,EAAUV,SAASW,cAAc,UACjCC,EAAa,CACjB5B,IAAQA,EAAL,aACHE,OACA,aAAc,QACd2B,MAAO,UACPvB,MAAOO,EACPiB,YAAa,YACbC,MAAO,QAETC,OAAOC,QAAQL,GAAYM,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDV,EAAQW,aAAaF,EAAKC,MAE5B3B,EAAaK,QAAQwB,YAAYZ,GACjCf,EAAoBG,SAAU,EAgB5ByB,MACH,CAACrC,EAAMI,IAEH,yBAAKkC,IAAK/B,KAGnBR,EAAQwC,YAAc,UAEPxC,Q,gDCXTyC,EAAe9C,IAAO+C,IAAV,6EAAG/C,CAAH,sFAGK,qBAAGU,MAAkBsC,OAAOC,MAK7CC,EAAelD,IAAO+C,IAAV,6EAAG/C,CAAH,gHAKK,qBAAGU,MAAkBsC,OAAOC,MAK7CE,EAAcnD,IAAOoD,QAAV,4EAAGpD,CAAH,6HAMM,qBAAGU,MAAkBsC,OAAOC,MAK7CI,EAAerD,YAAOE,KAAV,6EAAGF,CAAH,kEAKZsD,EAAOtD,IAAO+C,IAAV,qEAAG/C,CAAH,qCAIJuD,EAAOvD,YAAOD,KAAV,qEAAGC,CAAH,gDAKJwD,EAAOxD,IAAOyD,EAAV,qEAAGzD,CAAH,2IAKa,qBAAGU,MAAkBsC,OAAOC,MAM7CS,EAAU1D,IAAO+C,IAAV,wEAAG/C,CAAH,4HAQP2D,EAAQ3D,IAAO4D,GAAV,sEAAG5D,CAAH,8MAKY,qBAAGU,MAAkBsC,OAAOa,MAK5B,qBAAGnD,MAAkBsC,OAAOC,MAMtCa,EAAK,aAqBHC,UA9IE,SAAC,GAAc,IAAD,IAAXC,KAEhBC,eAF2B,IAGzBC,YAAeC,EAHU,EAGVA,MAAOC,EAHG,EAGHA,KAAMC,EAHH,EAGGA,UAAWC,EAHd,EAGcA,KAAMC,EAHpB,EAGoBA,SAC7CC,EAJyB,EAIzBA,KAIEC,EAAcJ,GAAaA,EAAUK,gBAAgBC,MAAMvE,IAEjE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK+D,MAAOA,EAAOS,YAAaR,EAAMS,MAAOJ,IAC7C,8BACE,iCACE,kBAAC3B,EAAD,KACE,kBAACI,EAAD,KACE,6BACE,gCACE,kBAACI,EAAD,KACE,kBAACD,EAAD,KAAekB,GACf,kBAAChB,EAAD,CAAMuB,SAAUR,GAAOA,IAEzB,kBAACX,EAAD,KAAQQ,GACR,kBAACX,EAAD,KAAOY,IAET,kBAACV,EAAD,MACA,kBAAC,IAAD,CACEqB,wBAAyB,CAAEC,OAAQR,GACnCS,OAAQA,UAMlB,kBAAC9B,EAAD,KACE,kBAAC,EAAD","file":"component---src-templates-blog-post-js-f0cb607a6729e501bac6.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst DateTime = styled.time`\r\n  margin-top: 12px;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-regular);\r\n  color: var(--color-text-3);\r\n`;\r\n\r\nexport default DateTime;\r\n","import styled from 'styled-components';\r\n\r\nconst Category = styled.span`\r\n  display: block;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n  color: var(--color-text-3);\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useRef, useContext, useEffect } from 'react';\r\nimport ThemeContext from 'store/themeContext';\r\nimport useSiteMetadata from 'hooks/useSiteMetadata';\r\nimport { DARK } from 'constants/constants';\r\n\r\nconst src = 'https://utteranc.es';\r\nconst utterancesSelector = 'iframe.utterances-frame';\r\nconst LIGHT_THEME = 'github-light';\r\nconst DARK_THEME = 'github-dark';\r\n\r\nconst Comment = () => {\r\n  const site = useSiteMetadata();\r\n  const { repo } = site.siteMetadata.utterances;\r\n  const theme = useContext(ThemeContext);\r\n  const containerRef = useRef(null);\r\n  const isUtterancesCreated = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!repo) return;\r\n    let themeMode = null;\r\n\r\n    if (!isUtterancesCreated.current) {\r\n      themeMode =\r\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME;\r\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME;\r\n\r\n    const createUtterancesEl = () => {\r\n      const comment = document.createElement('script');\r\n      const attributes = {\r\n        src: `${src}/client.js`,\r\n        repo,\r\n        'issue-term': 'title',\r\n        label: 'comment',\r\n        theme: themeMode,\r\n        crossOrigin: 'anonymous',\r\n        async: 'true',\r\n      };\r\n      Object.entries(attributes).forEach(([key, value]) => {\r\n        comment.setAttribute(key, value);\r\n      });\r\n      containerRef.current.appendChild(comment);\r\n      isUtterancesCreated.current = true;\r\n    };\r\n\r\n    const utterancesEl = containerRef.current.querySelector(utterancesSelector);\r\n\r\n    const postThemeMessage = () => {\r\n      if (!utterancesEl) return;\r\n      const message = {\r\n        type: 'set-theme',\r\n        theme: themeMode,\r\n      };\r\n      utterancesEl.contentWindow.postMessage(message, src);\r\n    };\r\n\r\n    isUtterancesCreated.current\r\n      ? postThemeMessage(utterancesEl)\r\n      : createUtterancesEl();\r\n  }, [repo, theme]);\r\n\r\n  return <div ref={containerRef} />;\r\n};\r\n\r\nComment.displayName = 'comment';\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport Layout from 'layout/layout';\r\nimport SEO from 'components/seo';\r\nimport Comment from 'components/comment';\r\nimport { rhythm } from 'styles/typography';\r\nimport Category from 'styles/category';\r\nimport DateTime from 'styles/dateTime';\r\nimport Markdown from 'styles/markdown';\r\n\r\nconst BlogPost = ({ data }) => {\r\n  const {\r\n    markdownRemark: {\r\n      frontmatter: { title, desc, thumbnail, date, category },\r\n      html,\r\n    },\r\n  } = data;\r\n\r\n  const ogImagePath = thumbnail && thumbnail.childImageSharp.fixed.src;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} description={desc} image={ogImagePath} />\r\n      <main>\r\n        <article>\r\n          <OuterWrapper>\r\n            <InnerWrapper>\r\n              <div>\r\n                <header>\r\n                  <Info>\r\n                    <PostCategory>{category}</PostCategory>\r\n                    <Time dateTime={date}>{date}</Time>\r\n                  </Info>\r\n                  <Title>{title}</Title>\r\n                  <Desc>{desc}</Desc>\r\n                </header>\r\n                <Divider />\r\n                <Markdown\r\n                  dangerouslySetInnerHTML={{ __html: html }}\r\n                  rhythm={rhythm}\r\n                />\r\n              </div>\r\n            </InnerWrapper>\r\n          </OuterWrapper>\r\n        </article>\r\n        <CommentWrap>\r\n          <Comment />\r\n        </CommentWrap>\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst OuterWrapper = styled.div`\r\n  margin-top: var(--sizing-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    margin-top: var(--sizing-lg);\r\n  }\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: var(--post-width);\r\n  margin: 0 auto;\r\n  padding-bottom: var(--sizing-lg);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    width: 87.5%;\r\n  }\r\n`;\r\n\r\nconst CommentWrap = styled.section`\r\n  width: 100%;\r\n  padding: 0 var(--padding-sm);\r\n  margin: 0 auto;\r\n  margin-bottom: var(--sizing-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst PostCategory = styled(Category)`\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n`;\r\n\r\nconst Info = styled.div`\r\n  margin-bottom: var(--sizing-md);\r\n`;\r\n\r\nconst Time = styled(DateTime)`\r\n  display: block;\r\n  margin-top: var(--sizing-xs);\r\n`;\r\n\r\nconst Desc = styled.p`\r\n  margin-top: var(--sizing-lg);\r\n  line-height: 1.5;\r\n  font-size: var(--text-lg);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    line-height: 1.31579;\r\n    font-size: 1.1875rem;\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: var(--color-gray-3);\r\n  margin-top: var(--sizing-lg);\r\n  margin-bottom: var(--sizing-lg);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-weight: var(--font-weight-bold);\r\n  line-height: 1.1875;\r\n  font-size: var(--text-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.md}) {\r\n    line-height: 1.21875;\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    line-height: 1.21875;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        desc\r\n        thumbnail {\r\n          childImageSharp {\r\n            fixed {\r\n              src\r\n            }\r\n          }\r\n        }\r\n        date(formatString: \"YYYY-MM-DD\")\r\n        category\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogPost;\r\n"],"sourceRoot":""}